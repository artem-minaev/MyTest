#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
            }

    stages {
        
        
        stage("teraform apply") {
           steps {
            withCredentials([[$class:'AmazonWebServicesCredentialsBinding',credentialsId:'aws_cred',accessKeyVariable:'AWS_ACCESS_KEY_ID',secretKeyVariable:'AWS_SECRET_ACCESS_KEY']]){
                echo " ============== teraform apply =================="
               
                sh 'terraform init'
                   sh 'ls -l'
                sh 'pwd'
                sh 'terraform apply -auto-approve'
             
                sh 'terraform output > outputs.txt'
                sh 'cut outputs.txt -d \' \' -f3 > txt.txt'
                
                }
           }
        } 
        
        stage("teraform ssh") {
            steps {
           // echo " ============== teraform ssh =================="
                 sshagent(credentials : ['ssh_key']) {
                  sh 'ssh -tt -o "StrictHostKeyChecking no" -l cloudbees $(cat txt.txt) uname -a'
     //       sh 'ssh -tt -o "StrictHostKeyChecking no" ubuntu@$(cat txt.txt) echo "hello"'
                 }
               //sh 'ssh -tt -o "StrictHostKeyChecking no" -i "/var/lib/jenkins/aws_ssh/MyKeyPair.pem" ubuntu@$(cat txt.txt) bash -s < bashscr.sh' 
                //sh 'sudo apt-get update'
                //sh 'sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common'
                //sh 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -'
                //sh 'sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"'
                //sh 'exit'
           }
        } 
        
    }
    
}
