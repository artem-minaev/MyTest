#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
        timestamps()
            }

    stages {
        
        stage("docker login") {
            steps {
                echo " ============== docker login =================="  
                withCredentials([usernamePassword(credentialsId: 'dockerhub_minaev', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login -u $USERNAME -p $PASSWORD
                    """
                }
            }
        }
        stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                dir ('docker/toolbox') {
                     sh ''' 
                         docker tag $(docker images artmin/minaev-doc:latest -q) fedora/httpd:$BUILD_NUMBER
                         docker build -t artmin/minaev-doc:latest . 
                        '''
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== start pushing image =================="
                sh '''
                docker push artmin/minaev-doc:latest
                '''
            }
        }
        
        stage("teraform apply") {
           steps {
            withCredentials([[$class:'AmazonWebServicesCredentialsBinding',credentialsId:'aws_cred',accessKeyVariable:'AWS_ACCESS_KEY_ID',secretKeyVariable:'AWS_SECRET_ACCESS_KEY']]){
                echo " ============== teraform apply =================="
                    sh ''' 
                          sh 'terraform init'
                          sh 'terraform apply -auto-approve' 
                       '''
                }
           }
        } 
        
        stage("teraform ssh") {
            steps {
            echo " ============== ssh deploy =================="
                sh '''
                terraform output > outputs.txt
                cut outputs.txt -d \' \' -f3 > txt.txt
                ssh -tt -o "StrictHostKeyChecking no" -i "/var/lib/jenkins/aws_ssh/MyKeyPair" ubuntu@$(cat txt.txt) 'docker stop $(docker ps -a -q);docker rm $(docker ps -a -q);docker rmi $(docker images -a -q);docker pull artmin/minaev-doc:latest;docker run -d --name artmin -p 80:80 artmin/minaev-doc:latest'
                '''
            }
        } 
        
        
    }
    
}
