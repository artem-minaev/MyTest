#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
            }

    stages {
        stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                dir ('docker/toolbox') {sh 'docker build . '}
             }
         }
        
        
        stage("teraform apply") {
            steps {
                withCredentials([[
            $class: 'AmazonWebServicesCredentialsBinding',
            credentialsId: 'aws_cred',
            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
        ]]) 
                echo " ============== teraform apply =================="
                sh 'terraform init'
                sh 'terraform apply -auto-approve'
                
                sh 'terraform output > outputs.txt'
                sh 'cut outputs.txt -d \' \' -f3 > txt.txt
            }
        } 
    }
    
}
