#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
            }

    stages {
        
        
        stage("teraform apply") {
           steps {
            withCredentials([[$class: 'AmazonWebServicesCredentialsBinding',credentialsId:'aws_cred',accessKeyVariable:'AWS_ACCESS_KEY_ID',secretKeyVariable:'AWS_SECRET_ACCESS_KEY']]){
                echo " ============== teraform apply =================="
               
                sh 'terraform init'
                sh 'terraform apply -auto-approve'
                sh 'terraform import aws_security_group.elb_sg sg-012ee3ccbcf46a279'

                
                sh 'terraform output > outputs.txt'
                sh 'cut outputs.txt -d \' \' -f3 > txt.txt'
                sh 'sleep 100'
                sh 'ssh -tt -i "/var/lib/jenkins/aws_ssh/MyKeyPair.pem" ec2-user@$(cat txt.txt)'
                }
           }
        } 
        
        stage("teraform ssh") {
           steps {
            echo " ============== teraform ssh =================="
           }
        } 
        
    }
    
}
