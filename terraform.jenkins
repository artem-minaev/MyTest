#!groovy
// Run docker build

properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
        timestamps()
            }

    stages {

       
        stage("teraform apply") {
           steps {
            withCredentials([[$class:'AmazonWebServicesCredentialsBinding',credentialsId:'aws_cred',accessKeyVariable:'AWS_ACCESS_KEY_ID',secretKeyVariable:'AWS_SECRET_ACCESS_KEY']]){
                echo " ============== teraform apply =================="
                dir ('terraform') {
                      sh '''
                          terraform init
                          terraform apply -auto-approve
                       '''
                    }
                }
           }
        }

        stage("teraform ssh") {
            steps {
            echo " ============== ssh deploy =================="
              sh '''
              dir ('terraform') {
              terraform output > outputs.txt
              cut outputs.txt -d \' \' -f3 > ip_output.txt
              ssh -tt -o "StrictHostKeyChecking no" -i "/var/lib/jenkins/aws_cred/MyKeyPair" ubuntu@$(cat ip_output.txt) 'docker stop $(docker ps -a -q);docker rm $(docker ps -a -q);docker rmi -f $(docker images -a -q);docker pull artmin/minaev-doc:latest;docker run -d --name artmin -p 80:80 artmin/minaev-doc:latest'
              '''
                 }
            }
        }

    }

}
